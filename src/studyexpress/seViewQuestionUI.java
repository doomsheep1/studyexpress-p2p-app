package studyexpress;

import com.sun.glass.events.MouseEvent;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableCellRenderer;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

 class LabelRendar implements TableCellRenderer{

    @Override
    public Component getTableCellRendererComponent(javax.swing.JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
   
        return (Component)value;
    }

}

public class seViewQuestionUI extends javax.swing.JFrame {
    
    javax.swing.JPanel qtPanel = new javax.swing.JPanel();
    javax.swing.JLabel upLabelQ = new javax.swing.JLabel();
    javax.swing.JLabel downLabelQ = new javax.swing.JLabel();
    
    DefaultTableModel qModel, aModel, cModel;
    String subject;
    student s;
    question q;
    answer a;
    comment c;
    int subId;
    
    seViewQuestionUI thisPage;
    
    questionController pageLogic = new questionController();
    answerController aController = new answerController();
    commentController cmtController = new commentController();
    voteController vote;

    /**
     * Creates new form seViewQuestionUI
     */
    public seViewQuestionUI() {
      initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        backBtn = new javax.swing.JButton();
        newAnsBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        ansTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        newCmtBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        commentTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        questionTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        qLabel = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        detailsText = new javax.swing.JTextArea();
        searchField = new javax.swing.JTextField();
        viewAnsBtn = new javax.swing.JButton();

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Comments to Questions");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1400, 950));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Student", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N
        jPanel1.setMaximumSize(new java.awt.Dimension(1366, 850));
        jPanel1.setMinimumSize(new java.awt.Dimension(1366, 850));
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 850));

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        backBtn.setText("Back");
        backBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        newAnsBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        newAnsBtn.setText("New Answer");
        newAnsBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        newAnsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAnsBtnActionPerformed(evt);
            }
        });

        ansTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S/No", "Answers", "Info", "Up vote", "Down vote"
            }
        ));
        jScrollPane4.setViewportView(ansTable);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Answers");

        newCmtBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        newCmtBtn.setText("New Comment");
        newCmtBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        newCmtBtn.setMaximumSize(new java.awt.Dimension(119, 27));
        newCmtBtn.setMinimumSize(new java.awt.Dimension(119, 27));
        newCmtBtn.setPreferredSize(new java.awt.Dimension(119, 27));
        newCmtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCmtBtnActionPerformed(evt);
            }
        });

        commentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S/No", "Comments", "Info", "Up vote", "Down vote"
            }
        ));
        jScrollPane2.setViewportView(commentTable);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Comments to Questions");

        questionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S/No", "Question", "Info", "Up vote", "Down vote"
            }
        ));
        jScrollPane1.setViewportView(questionTable);

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        jPanel2.setMaximumSize(new java.awt.Dimension(1300, 100));
        jPanel2.setMinimumSize(new java.awt.Dimension(1300, 100));
        jPanel2.setPreferredSize(new java.awt.Dimension(1300, 100));

        qLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        qLabel.setText("Question:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(qLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(qLabel)
                .addGap(35, 35, 35))
        );

        detailsText.setColumns(20);
        detailsText.setRows(5);
        jScrollPane5.setViewportView(detailsText);

        searchField.setText("Search");
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        viewAnsBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        viewAnsBtn.setText("View Answer");
        viewAnsBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        viewAnsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAnsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(viewAnsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newAnsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1300, Short.MAX_VALUE)
                                .addComponent(jScrollPane2))
                            .addComponent(newCmtBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1300, Short.MAX_VALUE)
                        .addComponent(jScrollPane5))
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newCmtBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newAnsBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(viewAnsBtn))))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, 890));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        pageLogic = new questionController();
        pageLogic.backBtnControllerQP(subject, s);
        this.setVisible (false);
    }//GEN-LAST:event_backBtnActionPerformed

    private void newAnsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAnsBtnActionPerformed
        aController = new answerController();
        aController.newAns(s, subject, subId, q);
        this.setVisible(false);
    }//GEN-LAST:event_newAnsBtnActionPerformed

    private void newCmtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCmtBtnActionPerformed
        cmtController = new commentController();
        cmtController.newCmt(s, subject, subId, q);
        this.setVisible(false);
    }//GEN-LAST:event_newCmtBtnActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void viewAnsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAnsBtnActionPerformed
        // TODO add your handling code here:
        if(this.a!=null)
        {
            aController = new answerController();
            this.setVisible(false);
            aController.viewAns(s, subject, subId, q, a);
        }
        else
            JOptionPane.showMessageDialog (null, "Either answer is not selected or there is no answer yet!");
    }//GEN-LAST:event_viewAnsBtnActionPerformed
                       
    public void displayPage(question qns, student s, String subject, int subId, ArrayList<Object>allAns, ArrayList<Object>allQnsCmt)
    {
        this.subject = subject;
        this.subId = subId;
        this.s = s;
        this.q = qns;
        this.thisPage = this;
        

        
        detailsText.setEditable(false);
        
        qLabel.setText(qLabel.getText() + "" + qns.getQuestion());
        
        qModel = (DefaultTableModel)questionTable.getModel();
        questionTable.setDefaultEditor(Object.class, null);
        questionTable.getColumn("Info").setCellRenderer(new MultilineTableCellRenderer());
        questionTable.setRowHeight(50);
        vote = new voteController(qns);
        qModel.addRow(new Object[]{qns.getQuestionId(), qns.getQuestion(), qns.getDetails(), vote.getUpBtn(), vote.getDownBtn()});
        detailsText.setText(String.valueOf(qns.getQnsDetail().get(0)));
        questionTable.setModel(qModel);
        questionTable.getTableHeader().setReorderingAllowed(false);
        questionTable.getTableHeader().setResizingAllowed(false);

        Action upVoteQ = new AbstractAction()
        {
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                javax.swing.JTable table = (javax.swing.JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                if(q!=null)
                {
                    vote.getVote().increaseVoting(qns);
                    vote.increaseRating(s);
                    JOptionPane.showMessageDialog (null, "Thank you for voting!\nThe latest vote will be reflected on next visit");
                }
                else
                    JOptionPane.showMessageDialog (null, "Please select on the question to vote!");
            }
        };
        
        ButtonColumn bcq1 = new ButtonColumn(questionTable, upVoteQ, 3);
        bcq1.setMnemonic(MouseEvent.BUTTON_LEFT);
        
        Action downVoteQ = new AbstractAction()
        {
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                javax.swing.JTable table = (javax.swing.JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                if(q!=null)
                {
                    vote.getVote().decreaseVoting(qns);
                    vote.increaseRating(s);
                    JOptionPane.showMessageDialog (null, "Thank you for voting!\nThe latest vote will be reflected on next visit");
                }
                else
                    JOptionPane.showMessageDialog (null, "Please select on the question to vote!");
            }
        };
        
        ButtonColumn bcq2 = new ButtonColumn(questionTable, downVoteQ, 4);
        bcq2.setMnemonic(MouseEvent.BUTTON_LEFT);
        
        aModel = (DefaultTableModel)ansTable.getModel();
        
        ansTable.setDefaultEditor(Object.class, null);
        ansTable.getColumn("Info").setCellRenderer(new MultilineTableCellRenderer());
        ansTable.getTableHeader().setReorderingAllowed(false);
        ansTable.getTableHeader().setResizingAllowed(false);
        
        if(!allAns.isEmpty())
        {
            for(int i = 0; i < allAns.size(); i+=4)
            {
                if(i>=allAns.size())
                    break;
               
                vote = new voteController(new answer(subId, qns, String.valueOf(allAns.get(i)), 
                                                      Integer.parseInt(String.valueOf(allAns.get(i+1)))));
                aModel.addRow(new Object[]{allAns.get(i+1), allAns.get(i), allAns.get(i+2), vote.getUpBtn(), vote.getDownBtn()});
            }
            ansTable.setModel(aModel);
            ansTable.setRowHeight(50);
            
            ansTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
                @Override
                public void valueChanged(ListSelectionEvent event) {
                    if (!event.getValueIsAdjusting()) 
                    {//This line prevents double events
                        //do some actions here
                        
                        a = new answer(s, subject, subId, q, ansTable.getValueAt(ansTable.getSelectedRow(), 1).toString(),
                                       (int)ansTable.getValueAt(ansTable.getSelectedRow(), 0), ansTable.getValueAt(ansTable.getSelectedRow(), 2). toString());
                    }
                }
            });
        }
        
        Action upVoteA = new AbstractAction()
        {
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                javax.swing.JTable table = (javax.swing.JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                if(a!=null)
                {
                    vote.getVote().increaseVoting(a);
                    vote.increaseRating(s);
                    JOptionPane.showMessageDialog (null, "Thank you for voting!\nThe latest vote will be reflected on next visit");
                }
                else
                    JOptionPane.showMessageDialog (null, "Please select on the answer to vote!");
            }
        };
        
        ButtonColumn bca1 = new ButtonColumn(ansTable, upVoteA, 3);
        bca1.setMnemonic(MouseEvent.BUTTON_LEFT);
        
        Action downVoteA = new AbstractAction()
        {
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                javax.swing.JTable table = (javax.swing.JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                if(a!=null)
                {
                    vote.getVote().decreaseVoting(a);
                    vote.increaseRating(s);
                    JOptionPane.showMessageDialog (null, "Thank you for voting!\nThe latest vote will be reflected on next visit");
                }
                else
                    JOptionPane.showMessageDialog (null, "Please select on the answer to vote!");
            }
        };
        
        ButtonColumn bca2 = new ButtonColumn(ansTable, downVoteA, 4);
        bca2.setMnemonic(MouseEvent.BUTTON_LEFT);
        
        cModel = (DefaultTableModel)commentTable.getModel();
        
        commentTable.setRowHeight(50);
        commentTable.setDefaultEditor(Object.class, null);
        commentTable.getColumn("Info").setCellRenderer(new MultilineTableCellRenderer());
        commentTable.getTableHeader().setReorderingAllowed(false);
        commentTable.getTableHeader().setResizingAllowed(false);
        
        if(!allQnsCmt.isEmpty())
        {
            for(int i = 0; i < allQnsCmt.size(); i+=4)
            {
                if(i>=allQnsCmt.size())
                    break;
               
                vote = new voteController(new comment(subId, q, String.valueOf(allQnsCmt.get(i)), Integer.parseInt(String.valueOf(allQnsCmt.get(+1)))));
                cModel.addRow(new Object[]{allQnsCmt.get(i+1), allQnsCmt.get(i), allQnsCmt.get(i+2), vote.getUpBtn(), vote.getDownBtn()});
            }
            commentTable.setModel(cModel);
            
            commentTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
                @Override
                public void valueChanged(ListSelectionEvent event) {
                    if (!event.getValueIsAdjusting()) 
                    {//This line prevents double events
                        //do some actions here
                        
                        c = new comment(subId, q, commentTable.getValueAt(commentTable.getSelectedRow(), 1).toString(), (int)commentTable.getValueAt(commentTable.getSelectedRow(), 0));
                        JOptionPane.showMessageDialog (null, "Comment:\n" + c.getComment() + "\nInfo:\n" + commentTable.getValueAt(commentTable.getSelectedRow(), 2).toString());
                    }
                }
            });
        }
        
        Action upVoteC = new AbstractAction()
        {
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                javax.swing.JTable table = (javax.swing.JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                if(c!=null)
                {
                    vote.getVote().increaseVoting(c);
                    vote.increaseRating(s);
                    JOptionPane.showMessageDialog (null, "Thank you for voting!\nThe latest vote will be reflected on next visit");
                }
                else
                    JOptionPane.showMessageDialog (null, "Please select on the comment to vote!");
            }
        };
        
        ButtonColumn bcc1 = new ButtonColumn(commentTable, upVoteC, 3);
        bcc1.setMnemonic(MouseEvent.BUTTON_LEFT);
        
        Action downVoteC = new AbstractAction()
        {
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                javax.swing.JTable table = (javax.swing.JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                if(c!=null)
                {
                    vote.getVote().decreaseVoting(c);
                    vote.increaseRating(s);
                    JOptionPane.showMessageDialog (null, "Thank you for voting!\nThe latest vote will be reflected on next visit");
                }
                else
                    JOptionPane.showMessageDialog (null, "Please select on the comment to vote!");
            }
        };
        
        ButtonColumn bcc2 = new ButtonColumn(commentTable, downVoteC, 4);
        bcc2.setMnemonic(MouseEvent.BUTTON_LEFT);
        
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(ansTable.getModel());
        
        ansTable.setRowSorter(rowSorter);
        
        searchField.getDocument().addDocumentListener(new DocumentListener(){

            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = searchField.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = searchField.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(seViewQuestionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(seViewQuestionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(seViewQuestionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(seViewQuestionUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new seViewQuestionUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ansTable;
    private javax.swing.JButton backBtn;
    private javax.swing.JTable commentTable;
    private javax.swing.JTextArea detailsText;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable3;
    private javax.swing.JButton newAnsBtn;
    private javax.swing.JButton newCmtBtn;
    private javax.swing.JLabel qLabel;
    private javax.swing.JTable questionTable;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton viewAnsBtn;
    // End of variables declaration//GEN-END:variables
}
