package studyexpress;

import com.sun.glass.events.MouseEvent;
import java.util.ArrayList;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

public class seQuestionPageUI extends javax.swing.JFrame {
    
    DefaultTableModel model /* = new DefaultTableModel(new Object[]{"S/No", "Questions", "Info", "Vote"}, 0) */;
    student s;
    question q;
    String subject;
    
    questionController pageLogic = new questionController();
    
    voteController vote;
    
    int subId = 0;

    /**
     * Creates new form seQuestionPageUI
     */
    public seQuestionPageUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        subLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        qTable = new javax.swing.JTable();
        newQns = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        viewBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1400, 800));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Student", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N
        jPanel1.setMaximumSize(new java.awt.Dimension(1366, 768));
        jPanel1.setMinimumSize(new java.awt.Dimension(1366, 768));
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 768));

        searchField.setText("Search");
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        subLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        subLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subLabel.setText("Subject");
        subLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        subLabel.setMaximumSize(new java.awt.Dimension(1300, 100));
        subLabel.setMinimumSize(new java.awt.Dimension(1300, 100));
        subLabel.setPreferredSize(new java.awt.Dimension(1300, 100));

        qTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S/No", "Questions", "Info", "Up vote", "Down vote"
            }
        ));
        jScrollPane1.setViewportView(qTable);

        newQns.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        newQns.setText("New");
        newQns.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        newQns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newQnsActionPerformed(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        backBtn.setText("Back");
        backBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        viewBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        viewBtn.setText("View");
        viewBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        viewBtn.setMaximumSize(new java.awt.Dimension(59, 33));
        viewBtn.setMinimumSize(new java.awt.Dimension(59, 33));
        viewBtn.setPreferredSize(new java.awt.Dimension(59, 33));
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(newQns, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(searchField)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1160, Short.MAX_VALUE))
                            .addComponent(subLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 15, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(subLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newQns))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backBtn)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        pageLogic = new questionController();
        pageLogic.backBtnController(s);
        this.setVisible (false);
    }//GEN-LAST:event_backBtnActionPerformed

    private void newQnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newQnsActionPerformed
        this.setVisible(false);
        questionController.newQns(s, subject, subId);
    }//GEN-LAST:event_newQnsActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:
        if(this.q!=null)
        {
            pageLogic = new questionController();
            pageLogic.viewQns(this.q, this.s, this.subject, this.subId, q.getQuestionId());
            this.setVisible(false);
        }
        else
            JOptionPane.showMessageDialog (null, "Either question is not selected or there is no question yet!");
    }//GEN-LAST:event_viewBtnActionPerformed

    public void displayPage(String sub, ArrayList<Object>allQns)
    {
        subLabel.setText(sub);
        
        qTable.setRowHeight(50);
        qTable.setDefaultEditor(Object.class, null);
        
        model = (DefaultTableModel)qTable.getModel();
        
        qTable.getColumn("Info").setCellRenderer(new MultilineTableCellRenderer());
        
        qTable.getTableHeader().setReorderingAllowed(false);
        qTable.getTableHeader().setResizingAllowed(false);

        for(int i = 0; i < allQns.size(); i+=6)
        {
            if(i>=allQns.size())
                break;
            else
            {
               
                vote = new voteController(new question(String.valueOf(allQns.get(i)), String.valueOf(allQns.get(i+5)), 
                                                       Integer.parseInt(String.valueOf(allQns.get(i+3))), Integer.parseInt(String.valueOf(allQns.get(i+1)))));
                model.addRow(new Object[]{allQns.get(i+1), allQns.get(i), allQns.get(i+2), vote.getUpBtn(), vote.getDownBtn()});
            }
        }
        qTable.getTableHeader().setResizingAllowed(false);
        qTable.setModel(model);
        qTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) 
                {//This line prevents double events
                    // do some actions here
                    
                    q = new question(qTable.getValueAt(qTable.getSelectedRow(), 1).toString(), qTable.getValueAt(qTable.getSelectedRow(), 2).toString(), 
                                     subId, (int)qTable.getValueAt(qTable.getSelectedRow(), 0));
                }
            }
        });
        
        //Right now must select on the row to vote
        Action upVote = new AbstractAction()
        {
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                javax.swing.JTable table = (javax.swing.JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                if(q!=null)
                {
                    vote.getVote().increaseVoting(q);
                    vote.increaseRating(s);
                    JOptionPane.showMessageDialog (null, "Thank you for voting!\nThe latest vote will be reflected on next visit");
                }
                else
                    JOptionPane.showMessageDialog (null, "Please select on the question to vote!");
               
            }
        };
        
        ButtonColumn buttonColumn1 = new ButtonColumn(qTable, upVote, 3);
        buttonColumn1.setMnemonic(MouseEvent.BUTTON_LEFT);
        
        Action downVote = new AbstractAction()
        {
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                javax.swing.JTable table = (javax.swing.JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                if(q!=null)
                {
                    vote.getVote().decreaseVoting(q);
                    vote.increaseRating(s);
                    JOptionPane.showMessageDialog (null, "Thank you for voting!\nThe latest vote will be reflected on next visit");
                }
                else
                    JOptionPane.showMessageDialog (null, "Please select on the question to vote!");
            }
        };
        
        ButtonColumn buttonColumn2 = new ButtonColumn(qTable, downVote, 4);
        buttonColumn2.setMnemonic(MouseEvent.BUTTON_LEFT);
        
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(qTable.getModel());
        
        qTable.setRowSorter(rowSorter);
        
        searchField.getDocument().addDocumentListener(new DocumentListener(){

            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = searchField.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = searchField.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });
    }
    
    public void setSubjectInfo(student s, String subject, int subId)
    {
        this.s = s;
        this.subject = subject;
        this.subId = subId;
    }
    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(seQuestionPageUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(seQuestionPageUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(seQuestionPageUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(seQuestionPageUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new seQuestionPageUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newQns;
    private javax.swing.JTable qTable;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel subLabel;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
