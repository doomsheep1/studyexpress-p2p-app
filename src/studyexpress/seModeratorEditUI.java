package studyexpress;

import javax.swing.JOptionPane;
import java.util.regex.Pattern;
class ModeratorEditController
{
    private moderatorHomeController back;
    
    private moderator m;
    private seModeratorEditUI modProfile;
    
    ModeratorEditController(){}
    
    ModeratorEditController(moderator m)
    {
        this.m = m;
        modProfile = new seModeratorEditUI();
        modProfile.setVisible(true);
        modProfile.setModerator(this.m);

    }
    
    public void backBtnController(moderator m)
    {
        back = new moderatorHomeController(m);
        back.displayModeratorInfo();
    }


    public static void updateProfile(moderator m, String username, String password, String fullname, String email, String phone)
    {

        String st2 ="UPDATE `studentid`.`moderator`\n" +
"SET\n" +
"`fullname` = '"+fullname+"',\n" +
"`password` = '"+password+"',\n" +
"`email` = '"+email+"',\n" +
"`phone` = '"+phone+"'\n" +
"WHERE `username` = '"+username+"';";
        //System.out.println("SQL statement " + st2);
        
        moderator.updateAccount(st2);
        m.setFullName(fullname);
        m.setEmail(email);
        m.setPhone(Integer.parseInt(phone));
    }
}


public class seModeratorEditUI extends javax.swing.JFrame {

    private moderator m;
    private ModeratorEditController pageLogic = new ModeratorEditController();

    public seModeratorEditUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        newPassTF = new javax.swing.JPasswordField();
        conPassTF = new javax.swing.JPasswordField();
        oldPassTF = new javax.swing.JPasswordField();
        fullnameTF = new javax.swing.JTextField();
        emailTF = new javax.swing.JTextField();
        phoneTF = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1400, 800));
        setMinimumSize(new java.awt.Dimension(1400, 800));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Moderator", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N
        jPanel1.setMaximumSize(new java.awt.Dimension(1366, 768));
        jPanel1.setMinimumSize(new java.awt.Dimension(1366, 768));
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 768));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Edit Profile");
        jLabel1.setToolTipText("");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        jLabel1.setMaximumSize(new java.awt.Dimension(1300, 100));
        jLabel1.setMinimumSize(new java.awt.Dimension(1300, 100));
        jLabel1.setPreferredSize(new java.awt.Dimension(1300, 100));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Old password:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("New password:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Confirm password:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("Full name:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setText("Email:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setText("Phone:");

        newPassTF.setText("jPasswordField1");
        newPassTF.setMinimumSize(new java.awt.Dimension(6, 23));

        conPassTF.setText("jPasswordField1");
        conPassTF.setMinimumSize(new java.awt.Dimension(6, 23));

        oldPassTF.setText("jPasswordField1");
        oldPassTF.setMinimumSize(new java.awt.Dimension(6, 23));

        fullnameTF.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fullnameTF.setText("exampleName");

        emailTF.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        emailTF.setText("exampleEmail@l.com");

        phoneTF.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        phoneTF.setText("23114321");

        backButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        backButton.setText("Back");
        backButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        saveButton.setText("Save");
        saveButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fullnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(conPassTF, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newPassTF, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(oldPassTF, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(oldPassTF, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(newPassTF, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(conPassTF, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(fullnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(phoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 1370, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        pageLogic = new ModeratorEditController ();
        pageLogic.backBtnController(m);
        this.setVisible (false);

    }//GEN-LAST:event_backButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

        String oldPass = String.valueOf(oldPassTF.getPassword());
        String newPass = String.valueOf(newPassTF.getPassword());
        String conPass = String.valueOf(conPassTF.getPassword());
        String fullName = fullnameTF.getText();
        String email = emailTF.getText();
        String phone = phoneTF.getText();
        boolean updated = true;

    if(checkEmptyField(oldPass, newPass, conPass, fullName, email, phone))
                JOptionPane.showMessageDialog (null, "All fields are empty!\nNo update is done.");
            else
            {
                //Validate password field
                if(!oldPass.isEmpty() && m.getPassword().equals(oldPass))
                {
                    if(!newPass.equals(conPass) ||  oldPass.equals(newPass))
                    {
                        JOptionPane.showMessageDialog (null, "Failed to save information:\n"
                                                              + "Either old and new password is the same or new and confirm password does not match");
                        updated = false;
                    }
                    else 
                    {
                        validateField(fullName, email, phone, conPass);
                    }
                }
                else if(oldPass.isEmpty()||  newPass.isEmpty() || conPass.isEmpty())
                    {
                        validateField(fullName, email, phone, "");
                    }
                else
                {
                    JOptionPane.showMessageDialog (null, "Old password does not match");
                    updated = false;
                }

            }

    }//GEN-LAST:event_saveButtonActionPerformed


public void setUpdate(String pw, String fullName, String email, String phone)
    {
        boolean vname = true; 
        if (pw.isEmpty() || fullName.isEmpty() || email.isEmpty() || phone.isEmpty())
        {
            vname = false;
            JOptionPane.showMessageDialog (null, "Required fields are empty");
        }
        else
        {
            if (isAlpha(fullName))
            {
                // ok
            }
            else
            {
                vname = false;
                JOptionPane.showMessageDialog (null, "Please check your full name"); 
            }
            if (isValid(email))
            {    
                // ok
            }
            else
            {
                vname = false;
                JOptionPane.showMessageDialog (null, "Incorrect Email Format");
            }
            if (Pattern.matches("^[89]{1}[0-9]{7}$", phone))
            {
                // ok
            }
            else
            {
                vname = false;
                JOptionPane.showMessageDialog (null, "Information not saved, check phone number");
            }
        }
        
        if(vname == true)
        {
            ModeratorEditController.updateProfile(m, m.getUsername(), pw, fullName, email, phone);
            JOptionPane.showMessageDialog (null,"Updated");
            m.setPassword(pw);
        }
        else
        {
            JOptionPane.showMessageDialog (null,"Invalid inputs");
        }
    }

private static boolean isAlpha(String fullnameCheck) 
    { 
        
        String regex = "^[a-zA-Z ]+$";
                              
        Pattern pat = Pattern.compile(regex); 
        if (fullnameCheck == null) 
            return false; 
        return pat.matcher(fullnameCheck).matches(); 
    } 
    private static boolean isValid(String email) 
    { 
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\."+ 
                            "[a-zA-Z0-9_+&*-]+)*@" + 
                            "(?:[a-zA-Z0-9-]+\\.)+[a-z" + 
                            "A-Z]{2,7}$"; 
                              
        Pattern pat = Pattern.compile(emailRegex); 
        if (email == null) 
            return false; 
        return pat.matcher(email).matches(); 
    } 

    private boolean isName(String fullnameCheck)
    {
        String regex ="^[a-zA-Z ]+$";
        
        Pattern pat = Pattern.compile(regex);
        if(fullnameCheck==null)
            return false;
        return pat.matcher(fullnameCheck).matches();
    }
    public void validateField(String fullName, String email, String phone, String cfmPW)
    {
        if(!fullName.isEmpty() && !isName(fullName))
            JOptionPane.showMessageDialog (null, "Name can only contain alphabets");
        else if(!email.isEmpty() && !Pattern.matches("^[\\w-\\.+]*[\\w-\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$", email))
            JOptionPane.showMessageDialog (null, "Invalid email format");
        else if(!phone.isEmpty() && !Pattern.matches("^[89]{1}[0-9]{7}$", phone))
            JOptionPane.showMessageDialog (null, "Invalid phone format, should only contain number");
        else
            setUpdate(cfmPW, fullName, email, phone);
    }

    public void setFieldsEmpty ()
    {
        oldPassTF.setText ("");
        newPassTF.setText ("");
        conPassTF.setText ("");
        fullnameTF.setText ("");
        emailTF.setText ("");
        phoneTF.setText ("");
    }
    
    public boolean checkEmptyField(String ...fields)
    {
        for(String field:fields)
        {
            if(!field.isEmpty())
                return false;
        }
        return true;
    }
    public void setModerator(moderator m)
    {
        this.m = m;
        oldPassTF.setText ("");
        newPassTF.setText ("");
        conPassTF.setText ("");
        fullnameTF.setText (m.getFullName());
        emailTF.setText (m.getEmail());
        phoneTF.setText (String.valueOf(m.getPhone()));
    }
    






    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(seModeratorEditUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(seModeratorEditUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(seModeratorEditUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(seModeratorEditUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new seModeratorEditUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JPasswordField conPassTF;
    private javax.swing.JTextField emailTF;
    private javax.swing.JTextField fullnameTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField newPassTF;
    private javax.swing.JPasswordField oldPassTF;
    private javax.swing.JTextField phoneTF;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
