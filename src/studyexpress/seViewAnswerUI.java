/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package studyexpress;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableCellRenderer;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JOptionPane;
import com.sun.glass.events.MouseEvent;

/**
 *
 * @author xuan_
 */
public class seViewAnswerUI extends javax.swing.JFrame {
    
    String subject;
    student s;
    question q;
    int subId;
    answer a;
    comment c;
    
    answerController ac;
    
    voteController vote;
    
    commentController cmtController;
    
    DefaultTableModel aModel, cModel;

    /**
     * Creates new form seViewAnswerUI
     */
    public seViewAnswerUI() {
      initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        ansTitleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ansTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        cmtTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        newCmtButton = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ansText = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        detailsText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1400, 850));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Student", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N
        jPanel1.setMaximumSize(new java.awt.Dimension(1366, 790));
        jPanel1.setMinimumSize(new java.awt.Dimension(1366, 790));
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 790));

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        jPanel2.setMaximumSize(new java.awt.Dimension(1300, 100));
        jPanel2.setMinimumSize(new java.awt.Dimension(1300, 100));
        jPanel2.setPreferredSize(new java.awt.Dimension(1300, 100));

        ansTitleLabel.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        ansTitleLabel.setText("Answer for:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(ansTitleLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(ansTitleLabel)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        ansTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S/No", "Answer", "Info", "Up vote", "Down vote"
            }
        ));
        jScrollPane1.setViewportView(ansTable);

        cmtTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S/No", "Comments", "Info", "Up Vote", "Down Vote"
            }
        ));
        jScrollPane2.setViewportView(cmtTable);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Comments:");

        newCmtButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        newCmtButton.setText("New comment");
        newCmtButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        newCmtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCmtButtonActionPerformed(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        backBtn.setText("Back");
        backBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        ansText.setColumns(20);
        ansText.setRows(5);
        jScrollPane3.setViewportView(ansText);

        detailsText.setColumns(20);
        detailsText.setRows(5);
        jScrollPane4.setViewportView(detailsText);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1300, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newCmtButton, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(35, 35, 35)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1300, Short.MAX_VALUE)
                    .addGap(19, 19, 19)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newCmtButton)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(255, 255, 255)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(402, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
                  
    private void newCmtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCmtButtonActionPerformed
        // TODO add your handling code here:
        cmtController = new commentController();
        cmtController.newCmt(s, subject, subId, a);
        this.setVisible(false);
    }//GEN-LAST:event_newCmtButtonActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        ac = new answerController ();
        ac.backBtnController(q, s, subject, subId);
        this.setVisible (false);
    }//GEN-LAST:event_backBtnActionPerformed

    public void setInfo(student s, String subject, int subId, question q, answer a, ArrayList<Object>allCmt)
    {
        this.s = s;
        this.subject = subject;
        this.subId = subId;
        this.q = q;
        this.a = a;
        
        vote = new voteController(a);
        
        ansTitleLabel.setText(ansTitleLabel.getText() + " " + q.getQuestion());
        
        detailsText.setText("Details of question:\n" + String.valueOf(q.getQnsDetail().get(0)));
        detailsText.setEditable(false);
        
        ansText.setText("Answer:\n" + String.valueOf(a.getAnswer()));
        ansText.setEditable(false);
        
        aModel = (DefaultTableModel)ansTable.getModel();
        aModel.addRow(new Object[]{a.getAnswerId(), a.getAnswer(), a.getAnsDetails(), vote.getUpBtn(), vote.getDownBtn()});
        ansTable.setModel(aModel);
        ansTable.setRowHeight(50);
        ansTable.setDefaultEditor(Object.class, null);
        ansTable.getTableHeader().setReorderingAllowed(false);
        ansTable.getTableHeader().setResizingAllowed(false);
        ansTable.getColumn("Info").setCellRenderer(new MultilineTableCellRenderer());

        Action upVoteA = new AbstractAction()
        {
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                javax.swing.JTable table = (javax.swing.JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                if(a!=null)
                {
                    vote.getVote().increaseVoting(a);
                    vote.increaseRating(s);
                    JOptionPane.showMessageDialog (null, "Thank you for voting!\nThe latest vote will be reflected on next visit");
                }
                else
                    JOptionPane.showMessageDialog (null, "Please select on the answer to vote!");
            }
        };
        
        ButtonColumn bca1 = new ButtonColumn(ansTable, upVoteA, 3);
        bca1.setMnemonic(MouseEvent.BUTTON_LEFT);
        
        Action downVoteA = new AbstractAction()
        {
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                javax.swing.JTable table = (javax.swing.JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                if(a!=null)
                {
                    vote.getVote().decreaseVoting(a);
                    vote.increaseRating(s);
                    JOptionPane.showMessageDialog (null, "Thank you for voting!\nThe latest vote will be reflected on next visit");
                }
                else
                    JOptionPane.showMessageDialog (null, "Please select on the answer to vote!");
            }
        };
        
        ButtonColumn bca2 = new ButtonColumn(ansTable, downVoteA, 4);
        bca2.setMnemonic(MouseEvent.BUTTON_LEFT);
        
        cModel = (DefaultTableModel)cmtTable.getModel();
        
        cmtTable.setRowHeight(50);
        cmtTable.setDefaultEditor(Object.class, null);
        cmtTable.getTableHeader().setReorderingAllowed(false);
        cmtTable.getTableHeader().setResizingAllowed(false);
        cmtTable.getColumn("Info").setCellRenderer(new MultilineTableCellRenderer());
        
        if(!allCmt.isEmpty())
        {
            for(int i = 0; i < allCmt.size(); i+=4)
            {
                if(i>=allCmt.size())
                    break;
             
                vote = new voteController(new comment(subId, q, String.valueOf(allCmt.get(i)), Integer.parseInt(String.valueOf(allCmt.get(i+1)))));
                cModel.addRow(new Object[]{allCmt.get(i+1), allCmt.get(i), allCmt.get(i+2), vote.getUpBtn(), vote.getDownBtn()});
            }
            cmtTable.setModel(cModel);
            
            cmtTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
                @Override
                public void valueChanged(ListSelectionEvent event) {
                    if (!event.getValueIsAdjusting()) 
                    {//This line prevents double events
                        //do some actions here
                       
                        c = new comment(subId, q, cmtTable.getValueAt(cmtTable.getSelectedRow(), 1).toString(), (int)cmtTable.getValueAt(cmtTable.getSelectedRow(), 0));
                        JOptionPane.showMessageDialog (null, "Comment:\n" + c.getComment() + "\nInfo:\n" + cmtTable.getValueAt(cmtTable.getSelectedRow(), 2).toString());
                    }
                }
            });
        }
        
        Action upVoteC = new AbstractAction()
        {
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                javax.swing.JTable table = (javax.swing.JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                if(c!=null)
                {
                    vote.getVote().increaseVoting(c);
                    vote.increaseRating(s);
                    JOptionPane.showMessageDialog (null, "Thank you for voting!\nThe latest vote will be reflected on next visit");
                }
                else
                    JOptionPane.showMessageDialog (null, "Please select on the comment to vote!");
            }
        };
        
        ButtonColumn bcc1 = new ButtonColumn(cmtTable, upVoteC, 3);
        bcc1.setMnemonic(MouseEvent.BUTTON_LEFT);
        
        Action downVoteC = new AbstractAction()
        {
            public void actionPerformed(java.awt.event.ActionEvent e)
            {
                javax.swing.JTable table = (javax.swing.JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                if(c!=null)
                {
                    vote.getVote().decreaseVoting(c);
                    vote.increaseRating(s);
                    JOptionPane.showMessageDialog (null, "Thank you for voting!\nThe latest vote will be reflected on next visit");
                }
                else
                    JOptionPane.showMessageDialog (null, "Please select on the comment to vote!");
            }
        };
        
        ButtonColumn bcc2 = new ButtonColumn(cmtTable, downVoteC, 4);
        bcc2.setMnemonic(MouseEvent.BUTTON_LEFT);
    }                
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(seViewAnswerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(seViewAnswerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(seViewAnswerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(seViewAnswerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new seViewAnswerUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ansTable;
    private javax.swing.JTextArea ansText;
    private javax.swing.JLabel ansTitleLabel;
    private javax.swing.JButton backBtn;
    private javax.swing.JTable cmtTable;
    private javax.swing.JTextArea detailsText;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton newCmtButton;
    // End of variables declaration//GEN-END:variables
}
